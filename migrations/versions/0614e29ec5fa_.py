"""empty message

Revision ID: 0614e29ec5fa
Revises: 3b8b0956b217
Create Date: 2022-07-27 18:06:38.363943

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "0614e29ec5fa"
down_revision = "3b8b0956b217"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index("ix_osmcha_project_id", table_name="osmcha")
    op.drop_table("osmcha")
    op.drop_index(
        "idx_task_assigned_by_status_composite", table_name="task_assignment_history"
    )
    op.drop_index(
        "idx_task_assigned_to_status_composite", table_name="task_assignment_history"
    )
    op.drop_index(
        "idx_task_assignment_history_composite", table_name="task_assignment_history"
    )
    op.drop_table("task_assignment_history")
    op.drop_column("projects", "prevent_adjacent_task_lock")
    op.drop_column("projects", "enforce_task_assignment")
    op.drop_constraint("fk_users_assigned_to", "tasks", type_="foreignkey")
    op.drop_column("tasks", "assigned_to")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "tasks",
        sa.Column("assigned_to", sa.BIGINT(), autoincrement=False, nullable=True),
    )
    op.create_foreign_key(
        "fk_users_assigned_to", "tasks", "users", ["assigned_to"], ["id"]
    )
    op.add_column(
        "projects",
        sa.Column(
            "enforce_task_assignment", sa.BOOLEAN(), autoincrement=False, nullable=True
        ),
    )
    op.add_column(
        "projects",
        sa.Column(
            "prevent_adjacent_task_lock",
            sa.BOOLEAN(),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.create_table(
        "task_assignment_history",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("project_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("task_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("task_status", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("is_closed", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column("assignee_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("assigner_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column(
            "assigned_date", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.Column(
            "unassigned_date",
            postgresql.TIMESTAMP(),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "assignment_history_id", sa.INTEGER(), autoincrement=False, nullable=True
        ),
        sa.ForeignKeyConstraint(["assignee_id"], ["users.id"], name="fk_assignees"),
        sa.ForeignKeyConstraint(["assigner_id"], ["users.id"], name="fk_assigners"),
        sa.ForeignKeyConstraint(
            ["assignment_history_id"], ["task_history.id"], name="fk_assignment_history"
        ),
        sa.ForeignKeyConstraint(
            ["project_id"],
            ["projects.id"],
            name="task_assignment_history_project_id_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["task_id", "project_id"], ["tasks.id", "tasks.project_id"], name="fk_tasks"
        ),
        sa.PrimaryKeyConstraint("id", name="task_assignment_history_pkey"),
    )
    op.create_index(
        "idx_task_assignment_history_composite",
        "task_assignment_history",
        ["task_id", "project_id"],
        unique=False,
    )
    op.create_index(
        "idx_task_assigned_to_status_composite",
        "task_assignment_history",
        ["assigner_id", "is_closed"],
        unique=False,
    )
    op.create_index(
        "idx_task_assigned_by_status_composite",
        "task_assignment_history",
        ["assignee_id", "is_closed"],
        unique=False,
    )
    op.create_table(
        "osmcha",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("project_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("task_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("changeset_id", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("taskhistory_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("no_of_flags", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("reasons", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(
            ["project_id"], ["projects.id"], name="osmcha_project_id_fkey"
        ),
        sa.PrimaryKeyConstraint("id", name="osmcha_pkey"),
    )
    op.create_index("ix_osmcha_project_id", "osmcha", ["project_id"], unique=False)
    # ### end Alembic commands ###
